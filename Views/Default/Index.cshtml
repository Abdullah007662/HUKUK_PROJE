@model HUKUK_PROJE.Entities.Contact
@{
    Layout = null;
}
<!DOCTYPE html>
<html lang="tr">

<head>
    @await Component.InvokeAsync("_HeadPartials")
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <style>
        .slider_bg_1 {
            background-image: url(~/lawyer-master/img/banner/banner.png);
        }

        .slider_bg_2 {
            background-image: url(~/lawyer-master/img/banner/banner2.png);
        }

        .appointment_area {
            padding: 50px 0;
        }

        .appointment_container {
            display: flex;
            justify-content: space-between;
            align-items: start;
        }

        .appointment_form {
            flex: 1;
            padding: 20px;
            max-width: 50%;
        }

        .map_container {
            flex: 1;
            padding: 20px;
        }

        textarea {
            width: 100%;
            height: 300px;
            resize: vertical;
        }
    </style>
</head>

<body>
    @await Component.InvokeAsync("_HeaderPartials")
    @await Component.InvokeAsync("_BannerPartials")
    @await Component.InvokeAsync("_AboutPartials")
    @await Component.InvokeAsync("_ServicePartials")
    @await Component.InvokeAsync("_EmployeeParials")
    @await Component.InvokeAsync("_TestimonialPartials")

    <div class="appointment_area">
        <div class="container">
            <div class="appointment_container">
                <!-- Randevu Formu -->
                <div class="appointment_form">
                    <h3><strong>Randevu Al</strong></h3>
                    <br />
                    <form id="appointmentForm" method="post" asp-action="Create">
                        <div class="row">
                            <div class="col-xl-6 col-md-6">
                                <input type="text" id="nameSurname" name="NameSurname" asp-for="NameSurname" placeholder="Ad Soyad" required>
                            </div>
                            <div class="col-xl-6 col-md-6">
                                <input type="email" id="email" name="Email" asp-for="Email" placeholder="Lütfen Geçerli Bir E-posta Giriniz" required>
                            </div>
                            <div class="col-xl-6 col-md-6">
                                <input type="text" id="phoneNumber" name="PhoneNumber" asp-for="PhoneNumber" placeholder="Telefon Numarası" required>
                            </div>
                            <div class="col-xl-6 col-md-6">
                                <input type="date" id="appointmentDate" name="AppointmentDate" asp-for="AppointmentDate" required>
                            </div>
                            <div class="col-xl-6 col-md-6">
                                <input type="time" id="appointmentTime" name="AppointmentTime" asp-for="AppointmentTime" min="10:00" max="18:00" required>
                            </div>
                            <div class="col-xl-6 col-md-6">
                                <select id="lawType" name="LawTypeID" class="form-control" required>
                                    <option value="">Lütfen bir kategori seçin</option>
                                    @foreach (var item in ViewBag.v1 as List<SelectListItem> ?? new List<SelectListItem>())
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-xl-12">
                                <textarea id="message" name="Message" asp-for="Message" placeholder="Olayı Kısaca Anlayınız..." required></textarea>
                            </div>
                            <div class="col-xl-12">
                                <div class="appoinment_button">
                                    <button type="submit" style="cursor:pointer" class="boxed-btn5">Randevu Al</button>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>

                <!-- Google Maps İframe -->
                <div class="map_container">
                    <iframe src="https://www.google.com/maps/embed?pb=..." width="100%" height="450" style="border:0;" allowfullscreen="" loading="lazy"></iframe>
                </div>
            </div>
        </div>
    </div>

    @await Component.InvokeAsync("_FooterPartials")
    @await Component.InvokeAsync("_ScriptPartials")

    <script>
        const today = new Date().toISOString().split('T')[0];
        const appointmentDate = document.getElementById("appointmentDate");
        const appointmentTime = document.getElementById("appointmentTime");

        appointmentDate.setAttribute("min", today);

        appointmentDate.addEventListener("change", function () {
            const selectedDate = new Date(this.value);
            const now = new Date();

            if (selectedDate.toDateString() === now.toDateString()) {
                const currentHour = now.getHours().toString().padStart(2, '0');
                const currentMinute = now.getMinutes().toString().padStart(2, '0');
                let minTime = `${currentHour}:${currentMinute}`;

                if (minTime < "10:00") minTime = "10:00";
                if (minTime > "18:00") minTime = "18:00";
                appointmentTime.setAttribute("min", minTime);
            } else {
                appointmentTime.setAttribute("min", "10:00");
            }
        });

        document.getElementById("appointmentForm").addEventListener("submit", function (event) {
            event.preventDefault();

            const email = document.getElementById("email").value;
            const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;


            if (!emailRegex.test(email)) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Geçersiz E-posta',
                    text: 'Lütfen geçerli bir e-posta adresi giriniz.',
                    confirmButtonText: 'Tamam'
                });
                return;
            }

            const selectedTime = appointmentTime.value;
            if (selectedTime < "10:00" || selectedTime > "18:00") {
                Swal.fire({
                    icon: 'warning',
                    title: 'Geçersiz Saat',
                    text: 'Lütfen 10:00 ile 18:00 saatleri arasında bir saat seçiniz.',
                    confirmButtonText: 'Tamam'
                });
                return;
            }

            const formData = new FormData(event.target);
            fetch('/Default/Create', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (response.ok) {
                        Swal.fire({
                            icon: 'success',
                            title: 'Randevunuz oluşturulmuştur!',
                            text: 'Randevunuz başarıyla kaydedildi ve mail olarak gönderildi.',
                            confirmButtonText: 'Tamam'
                        }).then(() => {
                            event.target.reset();
                        });
                    } else {
                        Swal.fire({
                            icon: 'error',
                            title: 'Hata!',
                            text: 'Randevu oluşturulurken bir hata oluştu. Lütfen tekrar deneyin.',
                            confirmButtonText: 'Tamam'
                        });
                    }
                })
                .catch(error => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: 'Bir hata oluştu. Lütfen tekrar deneyin.',
                        confirmButtonText: 'Tamam'
                    });
                });
        });
    </script>
</body>
</html>
