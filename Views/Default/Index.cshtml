@model HUKUK_PROJE.Entities.Contact
@{
    Layout = null;
}



<!DOCTYPE html>
<html lang="tr">

<head>
    @await Component.InvokeAsync("_HeadPartials")
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <style>
        .slider_bg_1 {
            background-image: url('@Url.Content(ViewBag.Banner1Image)');
        }

        .slider_bg_2 {
            background-image: url('@Url.Content(ViewBag.Banner2Image)');
        }

        .appointment_area {
            padding: 50px 0;
        }

        .appointment_container {
            display: flex;
            flex-wrap: wrap;
            justify-content: space-between;
            gap: 30px;
        }

        .appointment_form {
            flex: 1;
            padding: 20px;
            min-width: 300px;
        }

        .map_container {
            flex: 1;
            padding: 20px;
            min-width: 300px;
        }

        textarea {
            width: 100%;
            height: 300px;
            resize: vertical;
        }
    </style>
</head>

<body>
    @await Component.InvokeAsync("_HeaderPartials")
    @await Component.InvokeAsync("_BannerPartials")
    <br />
    @await Component.InvokeAsync("_AboutPartials")
    @await Component.InvokeAsync("_ServicePartials")
<h3 id="colorful-heading" style="
    text-align: center;
    font-weight: bold;
    font-size: 36px;
    text-transform: uppercase;
    margin: 40px 0;
">
    İLETİŞİM
</h3>

<script>
    const heading = document.getElementById("colorful-heading");
    const colors = ["#e74c3c", "#3498db", "#2ecc71", "#f39c12", "#9b59b6", "#1abc9c"];
    let index = 0;

    setInterval(() => {
        heading.style.color = colors[index];
        index = (index + 1) % colors.length;
    }, 2000); // Her 2 saniyede bir renk değiştirir
</script>


    <div class="appointment_area">
        <div class="container">
            <div class="appointment_container">
                <div class="appointment_form">
                    <h3 id="animated-heading" style="text-align: center;font-size: 30px;margin-bottom: 20px;"><strong>Size Ulaşalım</strong></h3>
                    <br />
                    <form id="appointmentForm" method="post" asp-controller="Default" asp-action="Create">
                        <div class="row">
                            <div class="col-xl-6 col-md-6 mb-3">
                                <input type="text" id="nameSurname" name="NameSurname" asp-for="NameSurname" placeholder="Ad Soyad" required class="form-control" />
                            </div>
                            <div class="col-xl-6 col-md-6 mb-3">
                                <input type="email" id="email" name="Email" asp-for="Email" placeholder="Lütfen geçerli bir e-posta giriniz" required class="form-control" />
                            </div>
                            <div class="col-xl-6 col-md-6 mb-3">
                                <input type="text" id="phoneNumber" name="PhoneNumber" asp-for="PhoneNumber" placeholder="Telefon Numarası" required class="form-control" />
                            </div>
                            <div class="col-xl-6 col-md-6 mb-3">
                                <select id="lawType" asp-for="LawTypes!.LawTypesID" class="form-control" required>
                                    <option value="">Lütfen bir kategori seçin</option>
                                    @foreach (var item in (List<SelectListItem>)ViewBag.v1)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                </select>
                            </div>
                            <div class="col-xl-12 mb-3">
                                <textarea id="message" name="Message" asp-for="Message" placeholder="Olayı kısaca anlatınız..." required class="form-control"></textarea>
                            </div>
                            <div class="col-xl-12 text-center">
                                <button type="submit" class="boxed-btn5" style="cursor:pointer">Randevu Al</button>
                            </div>
                        </div>
                    </form>

                </div>

                <div class="map_container">
                    <iframe src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d190.4957353252148!2d29.06196366995573!3d40.188331962148816!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x14ca3fa1b6f5e3e9%3A0x9e00905352242bd2!2zQXZ1a2F0IFrDvG1yw7x0IEZlcmlrIC0gWkQgSHVrdWsgRGFuxLHFn21hbmzEsWs!5e0!3m2!1str!2str!4v1744564136487!5m2!1str!2str&zoom=16" width="100%" height="450" style="border:0;" allowfullscreen="" loading="lazy" referrerpolicy="no-referrer-when-downgrade"></iframe>
                </div>

            </div>
        </div>
    </div>

    @await Component.InvokeAsync("_FooterPartials")
    @await Component.InvokeAsync("_ScriptPartials")

    <script>
            const heading = document.getElementById("colorful-heading");
    const colors = ["#e74c3c", "#3498db", "#2ecc71", "#f39c12", "#9b59b6", "#1abc9c"];
    let index = 0;

    setInterval(() => {
        heading.style.color = colors[index];
        index = (index + 1) % colors.length;
    }, 2000); // Her 2 saniyede bir renk değiştirir

        document.getElementById("appointmentForm").addEventListener("submit", function (event) {
            event.preventDefault();

            const email = document.getElementById("email").value;
            const emailRegex = /^[^\s@@]+@@[^\s@@]+\.[^\s@@]+$/;

            if (!emailRegex.test(email)) {
                Swal.fire({
                    icon: 'warning',
                    title: 'Geçersiz E-posta',
                    text: 'Lütfen geçerli bir e-posta adresi giriniz.',
                    confirmButtonText: 'Tamam'
                });
                return;
            }

            const formData = new FormData(event.target);

            fetch('/Default/Create', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (!response.ok) {
                        throw new Error("İşlem başarısız");
                    }
                    return response.json();
                })
                .then(() => {
                    Swal.fire({
                        icon: 'success',
                        title: 'Randevunuz oluşturuldu!',
                        text: 'Randevunuz başarıyla kaydedildi ve e-posta gönderildi.',
                        confirmButtonText: 'Tamam'
                    }).then(() => {
                        event.target.reset(); // Formu temizle
                        document.querySelector(".appointment_form").scrollIntoView({
                            behavior: "smooth",
                            block: "start"
                        }); // Form alanına kaydır
                    });
                })
                .catch(() => {
                    Swal.fire({
                        icon: 'error',
                        title: 'Hata!',
                        text: 'Randevu oluşturulurken bir hata oluştu. Lütfen tekrar deneyin.',
                        confirmButtonText: 'Tamam'
                    });
                });
        });
    </script>




</body>
</html>
